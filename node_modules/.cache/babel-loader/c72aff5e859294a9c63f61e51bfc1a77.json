{"ast":null,"code":"var _jsxFileName = \"/Users/jcsoutherland/Documents/GitHub/portfolio-two/src/Components/ThreeElement.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Suspense, useRef, useState } from 'react';\nimport { PerspectiveCamera, Html, useGLTF } from '@react-three/drei';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport './ThreeElement.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Model = () => {\n  _s();\n\n  const gltf = useGLTF('/desk_low-poly/scene.gltf', true);\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: gltf.scene,\n    dispose: null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Model, \"JPNsyO2HJUP2vpcCb1URfH7+8ZU=\", false, function () {\n  return [useGLTF];\n});\n\n_c = Model;\n\nfunction ThreeModel(props) {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    position: [0, 0, 0],\n    rotation: [0, -1.6, 0],\n    onClick: () => setClicked(!clicked),\n    children: /*#__PURE__*/_jsxDEV(Model, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ThreeModel;\n\nfunction ThreeElement(props) {\n  _s2();\n\n  const [mouseDown, setMouseDown] = useState(false);\n  const [clicked, setClicked] = useState(false);\n  const vec = new THREE.Vector3();\n  /*let timestamp = 0\n  let mX = 0\n  const handleMouseMove = (e) => {\n    if (mouseDown) {\n      let multiplier = 1\n      let now = Date.now()\n      let currentmX = e.screenX\n      let dt = now - timestamp\n      if (currentmX < mX) {\n        multiplier = -1\n      }\n      let distance = Math.abs(currentmX - mX)\n      let speed = (Math.round(distance / dt) / 30) * multiplier\n      ref.current.rotation.y += speed\n      mX = currentmX\n      timestamp = now\n    }\n  }*/\n\n  const ref = useRef();\n  useFrame(state => {\n    if (clicked) {\n      state.camera.lookAt(ref.current.position); //state.camera.position.lerp(vec.set(xPosition, yPosition, zPosition), 0.01)\n\n      state.camera.updateProjectionMatrix();\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Three-Container\",\n    children: /*#__PURE__*/_jsxDEV(Canvas\n    /*onMouseDown={() => {\n        setMouseDown(true)\n      }}\n      onMouseUp={() => {\n        setMouseDown(false)\n      }}\n      onMouseMove={handleMouseMove}\n      id='three-canvas'*/\n    , {\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n        intensity: 0.5,\n        position: [800, 1000, 3000]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ThreeElement, \"ry8hjEduwvsk/wp/f3fQfCCr530=\", false, function () {\n  return [useFrame];\n});\n\n_c3 = ThreeElement;\nexport default ThreeElement;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"ThreeModel\");\n$RefreshReg$(_c3, \"ThreeElement\");","map":{"version":3,"names":["React","Suspense","useRef","useState","PerspectiveCamera","Html","useGLTF","Canvas","useFrame","THREE","Model","gltf","scene","ThreeModel","props","ref","setClicked","clicked","ThreeElement","mouseDown","setMouseDown","vec","Vector3","state","camera","lookAt","current","position","updateProjectionMatrix"],"sources":["/Users/jcsoutherland/Documents/GitHub/portfolio-two/src/Components/ThreeElement.js"],"sourcesContent":["import React, { Suspense, useRef, useState } from 'react'\nimport { PerspectiveCamera, Html, useGLTF } from '@react-three/drei'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport * as THREE from 'three'\nimport './ThreeElement.scss'\n\nexport const Model = () => {\n  const gltf = useGLTF('/desk_low-poly/scene.gltf', true)\n  return <primitive object={gltf.scene} dispose={null} />\n}\n\nfunction ThreeModel(props) {\n  return (\n    <mesh\n      ref={ref}\n      position={[0, 0, 0]}\n      rotation={[0, -1.6, 0]}\n      onClick={() => setClicked(!clicked)}\n    >\n      <Model />\n    </mesh>\n  )\n}\n\nfunction ThreeElement(props) {\n  const [mouseDown, setMouseDown] = useState(false)\n  const [clicked, setClicked] = useState(false)\n  const vec = new THREE.Vector3()\n\n  /*let timestamp = 0\n  let mX = 0\n  const handleMouseMove = (e) => {\n    if (mouseDown) {\n      let multiplier = 1\n      let now = Date.now()\n      let currentmX = e.screenX\n      let dt = now - timestamp\n      if (currentmX < mX) {\n        multiplier = -1\n      }\n      let distance = Math.abs(currentmX - mX)\n      let speed = (Math.round(distance / dt) / 30) * multiplier\n      ref.current.rotation.y += speed\n      mX = currentmX\n      timestamp = now\n    }\n  }*/\n\n  const ref = useRef()\n  useFrame((state) => {\n    if (clicked) {\n      state.camera.lookAt(ref.current.position)\n      //state.camera.position.lerp(vec.set(xPosition, yPosition, zPosition), 0.01)\n      state.camera.updateProjectionMatrix()\n    }\n    return null\n  })\n\n  return (\n    <div className='Three-Container'>\n      <Canvas\n      /*onMouseDown={() => {\n          setMouseDown(true)\n        }}\n        onMouseUp={() => {\n          setMouseDown(false)\n        }}\n        onMouseMove={handleMouseMove}\n        id='three-canvas'*/\n      >\n        <ambientLight intensity={0.7} />\n        <spotLight intensity={0.5} position={[800, 1000, 3000]} />\n        {/*<PerspectiveCamera\n          makeDefault\n          position={[0, 420, 1000]}\n          rotation={[-0.3, 0, 0]}\n          fov='25'\n        />*/}\n        <Suspense fallback={null}></Suspense>\n      </Canvas>\n    </div>\n  )\n}\n\nexport default ThreeElement\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,iBAAT,EAA4BC,IAA5B,EAAkCC,OAAlC,QAAiD,mBAAjD;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,qBAAP;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;;EACzB,MAAMC,IAAI,GAAGL,OAAO,CAAC,2BAAD,EAA8B,IAA9B,CAApB;EACA,oBAAO;IAAW,MAAM,EAAEK,IAAI,CAACC,KAAxB;IAA+B,OAAO,EAAE;EAAxC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAHM;;GAAMF,K;UACEJ,O;;;KADFI,K;;AAKb,SAASG,UAAT,CAAoBC,KAApB,EAA2B;EACzB,oBACE;IACE,GAAG,EAAEC,GADP;IAEE,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFZ;IAGE,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAC,GAAL,EAAU,CAAV,CAHZ;IAIE,OAAO,EAAE,MAAMC,UAAU,CAAC,CAACC,OAAF,CAJ3B;IAAA,uBAME,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA;EANF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;MAXQJ,U;;AAaT,SAASK,YAAT,CAAsBJ,KAAtB,EAA6B;EAAA;;EAC3B,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACc,OAAD,EAAUD,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAMkB,GAAG,GAAG,IAAIZ,KAAK,CAACa,OAAV,EAAZ;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMP,GAAG,GAAGb,MAAM,EAAlB;EACAM,QAAQ,CAAEe,KAAD,IAAW;IAClB,IAAIN,OAAJ,EAAa;MACXM,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBV,GAAG,CAACW,OAAJ,CAAYC,QAAhC,EADW,CAEX;;MACAJ,KAAK,CAACC,MAAN,CAAaI,sBAAb;IACD;;IACD,OAAO,IAAP;EACD,CAPO,CAAR;EASA,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,uBACE,QAAC;IACD;AACN;AACA;AACA;AACA;AACA;AACA;AACA;IARM;MAAA,wBAUE;QAAc,SAAS,EAAE;MAAzB;QAAA;QAAA;QAAA;MAAA,QAVF,eAWE;QAAW,SAAS,EAAE,GAAtB;QAA2B,QAAQ,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ;MAArC;QAAA;QAAA;QAAA;MAAA,QAXF,eAkBE,QAAC,QAAD;QAAU,QAAQ,EAAE;MAApB;QAAA;QAAA;QAAA;MAAA,QAlBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;IA1DQV,Y;UAyBPV,Q;;;MAzBOU,Y;AA4DT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}